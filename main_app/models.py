# from django.db import models

# # Create your models here.
# POSITION_CHOICES = [
#         ('ST', 'Striker'),
#         ('RW', 'Right Wing'),
#         ('LW', 'Left Wing'),
#         ('CF', 'Center Forward')
#         ('RF', 'Rigth Forward')
#         ('LF', 'Left Forward')
#         ('CDM', 'Center Defensive Mildfielder')
#         ('LM', 'Left Midfielders')
#         ('RM', 'Right Midfielders')
#         ('CM', 'Center Midfielders')
#         ('CAM', 'Center Attacking Midfielder')
#         ('CB', 'Center Back')
#         ('RB', 'Right Back')
#         ('LB', 'Left Back')
#         ('RWB', 'Right Wing Back')
#         ('LWB', 'Left Wing Back')
#         ('GK', 'Goal Keeper')
#     ]
# NATIONS_CHOICES = [
#       ("Afghanistan", "ğŸ‡¦ğŸ‡«"),
#     ("Ã…land Islands", "ğŸ‡¦ğŸ‡½"),
#     ("Albania", "ğŸ‡¦ğŸ‡±"),
#     ("Algeria", "ğŸ‡©ğŸ‡¿"),
#     ("American Samoa", "ğŸ‡¦ğŸ‡¸"),
#     ("Andorra", "ğŸ‡¦ğŸ‡©"),
#     ("Angola", "ğŸ‡¦ğŸ‡´"),
#     ("Anguilla", "ğŸ‡¦ğŸ‡®"),
#     ("Antigua and Barbuda", "ğŸ‡¦ğŸ‡¬"),
#     ("Argentina", "ğŸ‡¦ğŸ‡·"),
#     ("Armenia", "ğŸ‡¦ğŸ‡²"),
#     ("Aruba", "ğŸ‡¦ğŸ‡¼"),
#     ("Australia", "ğŸ‡¦ğŸ‡º"),
#     ("Austria", "ğŸ‡¦ğŸ‡¹"),
#     ("Azerbaijan", "ğŸ‡¦ğŸ‡¿"),
#     ("Bahamas", "ğŸ‡§ğŸ‡¸"),
#     ("Bahrain", "ğŸ‡§ğŸ‡­"),
#     ("Bangladesh", "ğŸ‡§ğŸ‡©"),
#     ("Barbados", "ğŸ‡§ğŸ‡§"),
#     ("Belarus", "ğŸ‡§ğŸ‡¾"),
#     ("Belgium", "ğŸ‡§ğŸ‡ª"),
#     ("Belize", "ğŸ‡§ğŸ‡¿"),
#     ("Benin", "ğŸ‡§ğŸ‡¯"),
#     ("Bermuda", "ğŸ‡§ğŸ‡²"),
#     ("Bhutan", "ğŸ‡§ğŸ‡¹"),
#     ("Bolivia", "ğŸ‡§ğŸ‡´"),
#     ("Bosnia and Herzegovina", "ğŸ‡§ğŸ‡¦"),
#     ("Botswana", "ğŸ‡§ğŸ‡¼"),
#     ("Brazil", "ğŸ‡§ğŸ‡·"),
#     ("Virgin Islands, British", "ğŸ‡»ğŸ‡¬"),
#     ("Brunei Darussalam", "ğŸ‡§ğŸ‡³"),
#     ("Bulgaria", "ğŸ‡§ğŸ‡¬"),
#     ("Burkina Faso", "ğŸ‡§ğŸ‡«"),
#     ("Burundi", "ğŸ‡§ğŸ‡®"),
#     ("Cabo Verde", "ğŸ‡¨ğŸ‡»"),
#     ("Cambodia", "ğŸ‡°ğŸ‡­"),
#     ("Cameroon", "ğŸ‡¨ğŸ‡²"),
#     ("Canada", "ğŸ‡¨ğŸ‡¦"),
#     ("Cayman Islands", "ğŸ‡°ğŸ‡¾"),
#     ("Central African Republic", "ğŸ‡¨ğŸ‡«"),
#     ("Chad", "ğŸ‡¹ğŸ‡©"),
#     ("Chile", "ğŸ‡¨ğŸ‡±"),
#     ("China", "ğŸ‡¨ğŸ‡³"),
#     ("Colombia", "ğŸ‡¨ğŸ‡´"),
#     ("Comoros", "ğŸ‡°ğŸ‡²"),
#     ("Congo", "ğŸ‡¨ğŸ‡¬"),
#     ("Cook Islands", "ğŸ‡¨ğŸ‡°"),
#     ("Costa Rica", "ğŸ‡¨ğŸ‡·"),
#     ("CÃ´te d'Ivoire", "ğŸ‡¨ğŸ‡®"),
#     ("Croatia", "ğŸ‡­ğŸ‡·"),
#     ("Cuba", "ğŸ‡¨ğŸ‡º"),
#     ("CuraÃ§ao", "ğŸ‡¨ğŸ‡¼"),
#     ("Cyprus", "ğŸ‡¨ğŸ‡¾"),
#     ("Czech Republic", "ğŸ‡¨ğŸ‡¿"),
#     ("Congo, Democratic Republic of the", "ğŸ‡¨ğŸ‡©"),
#     ("Denmark", "ğŸ‡©ğŸ‡°"),
#     ("Djibouti", "ğŸ‡©ğŸ‡¯"),
#     ("Dominica", "ğŸ‡©ğŸ‡²"),
#     ("Dominican Republic", "ğŸ‡©ğŸ‡´"),
#     ("Ecuador", "ğŸ‡ªğŸ‡¨"),
#     ("Egypt", "ğŸ‡ªğŸ‡¬"),
#     ("El Salvador", "ğŸ‡¸ğŸ‡»"),
#     ("Equatorial Guinea", "ğŸ‡¬ğŸ‡¶"),
#     ("Eritrea", "ğŸ‡ªğŸ‡·"),
#     ("Estonia", "ğŸ‡ªğŸ‡ª"),
#     ("Eswatini", "ğŸ‡¸ğŸ‡¿"),
#     ("Ethiopia", "ğŸ‡ªğŸ‡¹"),
#     ("Falkland Islands (Malvinas)", "ğŸ‡«ğŸ‡°"),
#     ("Faroe Islands", "ğŸ‡«ğŸ‡´"),
#     ("Fiji", "ğŸ‡«ğŸ‡¯"),
#     ("Finland", "ğŸ‡«ğŸ‡®"),
#     ("France", "ğŸ‡«ğŸ‡·"),
#     ("French Guiana", "ğŸ‡¬ğŸ‡«"),
#     ("French Polynesia", "ğŸ‡µğŸ‡«"),
#     ("Gabon", "ğŸ‡¬ğŸ‡¦"),
#     ("Gambia", "ğŸ‡¬ğŸ‡²"),
#     ("Georgia", "ğŸ‡¬ğŸ‡ª"),
#     ("Germany", "ğŸ‡©ğŸ‡ª"),
#     ("Ghana", "ğŸ‡¬ğŸ‡­"),
#     ("Gibraltar", "ğŸ‡¬ğŸ‡®"),
#     ("Greece", "ğŸ‡¬ğŸ‡·"),
#     ("Greenland", "ğŸ‡¬ğŸ‡±"),
#     ("Grenada", "ğŸ‡¬ğŸ‡©"),
#     ("Guadeloupe", "ğŸ‡¬ğŸ‡µ"),
#     ("Guam", "ğŸ‡¬ğŸ‡º"),
#     ("Guatemala", "ğŸ‡¬ğŸ‡¹"),
#     ("Guernsey", "ğŸ‡¬ğŸ‡¬"),
#     ("Guinea", "ğŸ‡¬ğŸ‡³"),
#     ("Guinea-Bissau", "ğŸ‡¬ğŸ‡¼"),
#     ("Guyana", "ğŸ‡¬ğŸ‡¾"),
#     ("Haiti", "ğŸ‡­ğŸ‡¹"),
#     ("Honduras", "ğŸ‡­ğŸ‡³"),
#     ("Hong Kong", "ğŸ‡­ğŸ‡°"),
#     ("Hungary", "ğŸ‡­ğŸ‡º"),
#     ("Iceland", "ğŸ‡®ğŸ‡¸"),
#     ("India", "ğŸ‡®ğŸ‡³"),
#     ("Indonesia", "ğŸ‡®ğŸ‡©"),
#     ("Iran", "ğŸ‡®ğŸ‡·"),
#     ("Iraq", "ğŸ‡®ğŸ‡¶"),
#     ("Ireland", "ğŸ‡®ğŸ‡ª"),
#     ("Isle of Man", "ğŸ‡®ğŸ‡²"),
#     ("Israel", "ğŸ‡®ğŸ‡±"),
#     ("Italy", "ğŸ‡®ğŸ‡¹"),
#     ("Jamaica", "ğŸ‡¯ğŸ‡²"),
#     ("Japan", "ğŸ‡¯ğŸ‡µ"),
#     ("Jersey", "ğŸ‡¯ğŸ‡ª"),
#     ("Jordan", "ğŸ‡¯ğŸ‡´"),
#     ("Kazakhstan", "ğŸ‡°ğŸ‡¿"),
#     ("Kenya", "ğŸ‡°ğŸ‡ª"),
#     ("Kiribati", "ğŸ‡°ğŸ‡®"),
#     ("Kosovo", "ğŸ‡½ğŸ‡°"),
#     ("Kuwait", "ğŸ‡°ğŸ‡¼"),
#     ("Kyrgyzstan", "ğŸ‡°ğŸ‡¬"),
#     ("Lao People's Democratic Republic", "ğŸ‡±ğŸ‡¦"),
#     ("Latvia", "ğŸ‡±ğŸ‡»"),
#     ("Lebanon", "ğŸ‡±ğŸ‡§"),
#     ("Lesotho", "ğŸ‡±ğŸ‡¸"),
#     ("Liberia", "ğŸ‡±ğŸ‡·"),
#     ("Libya", "ğŸ‡±ğŸ‡¾"),
#     ("Liechtenstein", "ğŸ‡±ğŸ‡®"),
#     ("Lithuania", "ğŸ‡±ğŸ‡¹"),
#     ("Luxembourg", "ğŸ‡±ğŸ‡º"),
#     ("Macao", "ğŸ‡²ğŸ‡´"),
#     ("Madagascar", "ğŸ‡²ğŸ‡¬"),
#     ("Malawi", "ğŸ‡²ğŸ‡¼"),
#     ("Malaysia", "ğŸ‡²ğŸ‡¾"),
#     ("Maldives", "ğŸ‡²ğŸ‡»"),
#     ("Mali", "ğŸ‡²ğŸ‡±"),
#     ("Malta", "ğŸ‡²ğŸ‡¹"),
#     ("Marshall Islands", "ğŸ‡²ğŸ‡­"),
#     ("Martinique", "ğŸ‡²ğŸ‡¶"),
#     ("Mauritania", "ğŸ‡²ğŸ‡·"),
#     ("Mauritius", "ğŸ‡²ğŸ‡º"),
#     ("Mayotte", "ğŸ‡¾ğŸ‡¹"),
#     ("Mexico", "ğŸ‡²ğŸ‡½"),
#     ("Micronesia", "ğŸ‡«ğŸ‡²"),
#     ("Moldova", "ğŸ‡²ğŸ‡©"),
#     ("Monaco", "ğŸ‡²ğŸ‡¨"),
#     ("Mongolia", "ğŸ‡²ğŸ‡³"),
#     ("Montenegro", "ğŸ‡²ğŸ‡ª"),
#     ("Montserrat", "ğŸ‡²ğŸ‡¸"),
#     ("Morocco", "ğŸ‡²ğŸ‡¦"),
#     ("Mozambique", "ğŸ‡²ğŸ‡¿"),
#     ("Myanmar", "ğŸ‡²ğŸ‡²"),
#     ("Namibia", "ğŸ‡³ğŸ‡¦"),
#     ("Nauru", "ğŸ‡³ğŸ‡·"),
#     ("Nepal", "ğŸ‡³ğŸ‡µ"),
#     ("Netherlands", "ğŸ‡³ğŸ‡±"),
#     ("New Caledonia", "ğŸ‡³ğŸ‡¨"),
#     ("New Zealand", "ğŸ‡³ğŸ‡¿"),
#     ("Nicaragua", "ğŸ‡³ğŸ‡®"),
#     ("Niger", "ğŸ‡³ğŸ‡ª"),
#     ("Nigeria", "ğŸ‡³ğŸ‡¬"),
#     ("Niue", "ğŸ‡³ğŸ‡º"),
#     ("North Korea", "ğŸ‡°ğŸ‡µ"),
#     ("North Macedonia", "ğŸ‡²ğŸ‡°"),
#     ("Northern Mariana Islands", "ğŸ‡²ğŸ‡µ"),
#     ("Norway", "ğŸ‡³ğŸ‡´"),
#     ("Oman", "ğŸ‡´ğŸ‡²"),
#     ("Pakistan", "ğŸ‡µğŸ‡°"),
#     ("Palau", "ğŸ‡µğŸ‡¼"),
#     ("Palestine", "ğŸ‡µğŸ‡¸"),
#     ("Panama", "ğŸ‡µğŸ‡¦"),
#     ("Papua New Guinea", "ğŸ‡µğŸ‡¬"),
#     ("Paraguay", "ğŸ‡µğŸ‡¾"),
#     ("Peru", "ğŸ‡µğŸ‡ª"),
#     ("Philippines", "ğŸ‡µğŸ‡­"),
#     ("Poland", "ğŸ‡µğŸ‡±"),
#     ("Portugal", "ğŸ‡µğŸ‡¹"),
#     ("Puerto Rico", "ğŸ‡µğŸ‡·"),
#     ("Qatar", "ğŸ‡¶ğŸ‡¦"),
#     ("RÃ©union", "ğŸ‡·ğŸ‡ª"),
#     ("Romania", "ğŸ‡·ğŸ‡´"),
#     ("Russian Federation", "ğŸ‡·ğŸ‡º"),
#     ("Rwanda", "ğŸ‡·ğŸ‡¼"),
#     ("Saint BarthÃ©lemy", "ğŸ‡§ğŸ‡±"),
#     ("Saint Helena, Ascension and Tristan da Cunha", "ğŸ‡¸ğŸ‡­"),
#     ("Saint Kitts and Nevis", "ğŸ‡°ğŸ‡³"),
#     ("Saint Lucia", "ğŸ‡±ğŸ‡¨"),
#     ("Saint Pierre and Miquelon", "ğŸ‡µğŸ‡²"),
#     ("Saint Vincent and the Grenadines", "ğŸ‡»ğŸ‡¨"),
#     ("Samoa", "ğŸ‡¼ğŸ‡¸"),
#     ("San Marino", "ğŸ‡¸ğŸ‡²"),
#     ("Sao Tome and Principe", "ğŸ‡¸ğŸ‡¹"),
#     ("Saudi Arabia", "ğŸ‡¸ğŸ‡¦"),
#     ("Senegal", "ğŸ‡¸ğŸ‡³"),
#     ("Serbia", "ğŸ‡·ğŸ‡¸"),
#     ("Seychelles", "ğŸ‡¸ğŸ‡¨"),
#     ("Sierra Leone", "ğŸ‡¸ğŸ‡±"),
#     ("Singapore", "ğŸ‡¸ğŸ‡¬"),
#     ("Sint Maarten (Dutch part)", "ğŸ‡¸ğŸ‡½"),
#     ("Slovakia", "ğŸ‡¸ğŸ‡°"),
#     ("Slovenia", "ğŸ‡¸ğŸ‡®"),
#     ("Solomon Islands", "ğŸ‡¸ğŸ‡§"),
#     ("Somalia", "ğŸ‡¸ğŸ‡´"),
#     ("South Africa", "ğŸ‡¿ğŸ‡¦"),
#     ("Korea", "ğŸ‡°ğŸ‡·"),
#     ("South Sudan", "ğŸ‡¸ğŸ‡¸"),
#     ("Spain", "ğŸ‡ªğŸ‡¸"),
#     ("Sri Lanka", "ğŸ‡±ğŸ‡°"),
#     ("Sudan", "ğŸ‡¸ğŸ‡©"),
#     ("Suriname", "ğŸ‡¸ğŸ‡·"),
#     ("Sweden", "ğŸ‡¸ğŸ‡ª"),
#     ("Switzerland", "ğŸ‡¨ğŸ‡­"),
#     ("Syria", "ğŸ‡¸ğŸ‡¾"),
#     ("Taiwan", "ğŸ‡¹ğŸ‡¼"),
#     ("Tajikistan", "ğŸ‡¹ğŸ‡¯"),
#     ("Tanzania", "ğŸ‡¹ğŸ‡¿"),
#     ("Thailand", "ğŸ‡¹ğŸ‡­"),
#     ("Timor-Leste", "ğŸ‡¹ğŸ‡±"),
#     ("Togo", "ğŸ‡¹ğŸ‡¬"),
#     ("Tokelau", "ğŸ‡¹ğŸ‡°"),
#     ("Tonga", "ğŸ‡¹ğŸ‡´"),
#     ("Trinidad and Tobago", "ğŸ‡¹ğŸ‡¹"),
#     ("Tunisia", "ğŸ‡¹ğŸ‡³"),
#     ("Turkey", "ğŸ‡¹ğŸ‡·"),
#     ("Turkmenistan", "ğŸ‡¹ğŸ‡²"),
#     ("Turks and Caicos Islands", "ğŸ‡¹ğŸ‡¨"),
#     ("Tuvalu", "ğŸ‡¹ğŸ‡»"),
#     ("Uganda", "ğŸ‡ºğŸ‡¬"),
#     ("Ukraine", "ğŸ‡ºğŸ‡¦"),
#     ("United Arab Emirates", "ğŸ‡¦ğŸ‡ª"),
#     ("United Kingdom", "ğŸ‡¬ğŸ‡§"),
#     ("United States of America", "ğŸ‡ºğŸ‡¸"),
#     ("Uruguay", "ğŸ‡ºğŸ‡¾"),
#     ("Virgin Islands, U.S.", "ğŸ‡»ğŸ‡®"),
#     ("Uzbekistan", "ğŸ‡ºğŸ‡¿"),
#     ("Vanuatu", "ğŸ‡»ğŸ‡º"),
#     ("Holy See", "ğŸ‡»ğŸ‡¦"),
#     ("Venezuela", "ğŸ‡»ğŸ‡ª"),
#     ("Vietnam", "ğŸ‡»ğŸ‡³"),
#     ("Wallis and Futuna", "ğŸ‡¼ğŸ‡«"),
#     ("Western Sahara", "ğŸ‡ªğŸ‡­"),
#     ("Yemen", "ğŸ‡¾ğŸ‡ª"),
#     ("Zambia", "ğŸ‡¿ğŸ‡²"),
#     ("Zimbabwe", "ğŸ‡¿ğŸ‡¼"),
# ]

# CLUB_CHOICES = {
#     "ğŸ‡¬ğŸ‡§ Premier League": [
#         ("Arsenal", "ğŸ‡¬ğŸ‡§"),
#         ("Aston Villa", "ğŸ‡¬ğŸ‡§"),
#         ("Brentford", "ğŸ‡¬ğŸ‡§"),
#         ("Brighton & Hove Albion", "ğŸ‡¬ğŸ‡§"),
#         ("Chelsea", "ğŸ‡¬ğŸ‡§"),
#         ("Crystal Palace", "ğŸ‡¬ğŸ‡§"),
#         ("Everton", "ğŸ‡¬ğŸ‡§"),
#         ("Fulham", "ğŸ‡¬ğŸ‡§"),
#         ("Liverpool", "ğŸ‡¬ğŸ‡§"),
#         ("Manchester City", "ğŸ‡¬ğŸ‡§"),
#         ("Manchester United", "ğŸ‡¬ğŸ‡§"),
#         ("Newcastle United", "ğŸ‡¬ğŸ‡§"),
#         ("Nottingham Forest", "ğŸ‡¬ğŸ‡§"),
#         ("Tottenham Hotspur", "ğŸ‡¬ğŸ‡§"),
#         ("West Ham United", "ğŸ‡¬ğŸ‡§"),
#         ("Wolverhampton Wanderers", "ğŸ‡¬ğŸ‡§")
#     ],
    
#     "ğŸ‡ªğŸ‡¸ La Liga": [
#         ("AlavÃ©s", "ğŸ‡ªğŸ‡¸"),
#         ("Athletic Bilbao", "ğŸ‡ªğŸ‡¸"),
#         ("AtlÃ©tico Madrid", "ğŸ‡ªğŸ‡¸"),
#         ("Barcelona", "ğŸ‡ªğŸ‡¸"),
#         ("CÃ¡diz", "ğŸ‡ªğŸ‡¸"),
#         ("Celta Vigo", "ğŸ‡ªğŸ‡¸"),
#         ("Elche", "ğŸ‡ªğŸ‡¸"),
#         ("Espanyol", "ğŸ‡ªğŸ‡¸"),
#         ("Getafe", "ğŸ‡ªğŸ‡¸"),
#         ("Girona", "ğŸ‡ªğŸ‡¸"),
#         ("Real Madrid", "ğŸ‡ªğŸ‡¸"),
#         ("Real Sociedad", "ğŸ‡ªğŸ‡¸"),
#         ("Sevilla", "ğŸ‡ªğŸ‡¸"),
#         ("Valencia", "ğŸ‡ªğŸ‡¸"),
#         ("Villarreal", "ğŸ‡ªğŸ‡¸")
#     ],
    
#     "ğŸ‡®ğŸ‡¹ Serie A": [
#         ("Atalanta", "ğŸ‡®ğŸ‡¹"),
#         ("Bologna", "ğŸ‡®ğŸ‡¹"),
#         ("Cremonese", "ğŸ‡®ğŸ‡¹"),
#         ("Empoli", "ğŸ‡®ğŸ‡¹"),
#         ("Fiorentina", "ğŸ‡®ğŸ‡¹"),
#         ("Hellas Verona", "ğŸ‡®ğŸ‡¹"),
#         ("Inter Milan", "ğŸ‡®ğŸ‡¹"),
#         ("Juventus", "ğŸ‡®ğŸ‡¹"),
#         ("Lazio", "ğŸ‡®ğŸ‡¹"),
#         ("Lecce", "ğŸ‡®ğŸ‡¹"),
#         ("Milan", "ğŸ‡®ğŸ‡¹"),
#         ("Monza", "ğŸ‡®ğŸ‡¹"),
#         ("Napoli", "ğŸ‡®ğŸ‡¹"),
#         ("Roma", "ğŸ‡®ğŸ‡¹"),
#         ("Sassuolo", "ğŸ‡®ğŸ‡¹"),
#         ("Spezia", "ğŸ‡®ğŸ‡¹"),
#         ("Torino", "ğŸ‡®ğŸ‡¹"),
#         ("Udinese", "ğŸ‡®ğŸ‡¹")
#     ],
    
#     "ğŸ‡©ğŸ‡ª Bundesliga": [
#         ("Augsburg", "ğŸ‡©ğŸ‡ª"),
#         ("Bayer Leverkusen", "ğŸ‡©ğŸ‡ª"),
#         ("Bayern Munich", "ğŸ‡©ğŸ‡ª"),
#         ("Borussia Dortmund", "ğŸ‡©ğŸ‡ª"),
#         ("Borussia MÃ¶nchengladbach", "ğŸ‡©ğŸ‡ª"),
#         ("Eintracht Frankfurt", "ğŸ‡©ğŸ‡ª"),
#         ("Freiburg", "ğŸ‡©ğŸ‡ª"),
#         ("Hannover", "ğŸ‡©ğŸ‡ª"),
#         ("Hoffenheim", "ğŸ‡©ğŸ‡ª"),
#         ("Mainz", "ğŸ‡©ğŸ‡ª"),
#         ("RB Leipzig", "ğŸ‡©ğŸ‡ª"),
#         ("Union Berlin", "ğŸ‡©ğŸ‡ª"),
#         ("VfL Wolfsburg", "ğŸ‡©ğŸ‡ª")
#     ],
    
#     "ğŸ‡«ğŸ‡· Ligue 1": [
#         ("Ajaccio", "ğŸ‡«ğŸ‡·"),
#         ("Angers", "ğŸ‡«ğŸ‡·"),
#         ("Auxerre", "ğŸ‡«ğŸ‡·"),
#         ("Brest", "ğŸ‡«ğŸ‡·"),
#         ("Clermont", "ğŸ‡«ğŸ‡·"),
#         ("Lorient", "ğŸ‡«ğŸ‡·"),
#         ("Lille", "ğŸ‡«ğŸ‡·"),
#         ("Lens", "ğŸ‡«ğŸ‡·"),
#         ("Lyon", "ğŸ‡«ğŸ‡·"),
#         ("Marseille", "ğŸ‡«ğŸ‡·"),
#         ("Monaco", "ğŸ‡«ğŸ‡·"),
#         ("Montpellier", "ğŸ‡«ğŸ‡·"),
#         ("Nantes", "ğŸ‡«ğŸ‡·"),
#         ("Nice", "ğŸ‡«ğŸ‡·"),
#         ("Paris Saint-Germain", "ğŸ‡«ğŸ‡·"),
#         ("Reims", "ğŸ‡«ğŸ‡·"),
#         ("Rennes", "ğŸ‡«ğŸ‡·"),
#         ("Strasbourg", "ğŸ‡«ğŸ‡·"),
#         ("Troyes", "ğŸ‡«ğŸ‡·"),
#         ("Toulouse", "ğŸ‡«ğŸ‡·")
#     ]
# }

# RARITY_CHOICES =[
#     ('Silver')
#     ('Bronze')
#     ('Common')
#     ('TEAM OF THE WEEK')
#     ('TOTS CHAMPIONS')
#     ('TEAM OF THE SEASON')
#     ('FUTTIES')
#     ('SHAPESHIFTERS')
#     ('ICON')
#     ('TOTS HONOURABLE MENTIONS')
#     ('FUT BIRTHDAY')
#     ('WINTER WILDCARDS')
#     ('UT HEROES')
#     ('NUMEROFUT')
#     ('FUTURE STARS')
#     ('TOTAL RUSH')
#     ('FUTTIES ICON')
#     ('SQUAD FOUNDATIONS')
#     ('TRAILBLAZERS')
#     ('FLASHBACK PLAYER')
#     ('FANSTASY FC')
#     ('FUT IMMORTALS ICON')
#     ('THUNDERSTRUCK')
#     ('WEURO PATH TO GLORY')
#     ('GLOBETROTTERS')
#     ('CENTURIONS')
#     ('UCL ROAD TO THE FINAL')
#     ('GRASSROOT GREATS')
#     ('ULTIMATE SUCCESSION')
#     ('WORLD TOUR')
#     ('UCL ROAD TO THE KNOCKOUTS')
#     ('FUTTIES HERO')
#     ('TOTY HONOURABLE MENTIONS')
#     ('TRACK STARS')
#     ('TEAM OF THE YEAR')
#     ('SHAPSHIFTER ICON')
#     ('UEFA EUROPA LEAGUE RTTF')
#     ('WINTER WILDCARDS ICON')
#     ('UCL DREAMCHASERS')
#     ('FUTURE STARS ICON')
#     ('WINTER WILDCARDS HERO')
#     ('FUT BIRTHDAY HERO')
#     ('UEFA CONFERENCE LEAGUE RTTF')
#     ('THUNDERSTRUCK')
#     ('SHOWDOWN PLUS')
#     ('STAR PERFORMER')
#     ('FANTASY FC HERO')
#     ('CHAMPION MASTERY')
#     ('SQUAD BATTLES MASTERY')
#     ('RIVALS MASTERY')
#     ('END OF AN ERA')
#     ('FUTURE STARS EVOLUTION')
#     ('PRIME HERO')
#     ('SHAPESHIFTER HERO')
#     ('TOTY ICON')
#     ('ON THIS DAY ICON')
#     ('CENTURIONS ICON ')
#     ('TRACK STARS HERO')
#     ('FUT BIRTHDAY ICON')
#     ('FUT IMMORTALS HERO')
#     ('ULTIMATE SUCCESSION ICON')
#     ('WINTER CHAMPIONS')
#     ('DREAMCHASER HERO')
#     ('MOMENTS')
#     ('PRIME HERO')
#     ('GREATS OF THE GAME HERO')
#     ('GREATS OF THE GAME ICON')
#     ('UECL DREAMCHASERS')
# ]

# class FIFA_CARD(models.Model):
#     Rating = models.PositiveIntegerField(min_length = 1, max_length = 99)
#     Position = models.CharField(choices = POSITION_CHOICES)
#     Nation = models.CharField( choices = NATIONS_CHOICES)
#     Club = models.CharField( choices = CLUB_CHOICES)
#     Name = models.CharField(max_length = 20)
#     Pace = models.PositiveIntegerField(min_lenth = 1, max_length = 99)
#     Shooting = models.PositiveIntegerField(min_lenth = 1, max_length = 99)
#     Passing = models.PositiveIntegerField(min_lenth = 1, max_length = 99)
#     Dribbling = models.PositiveIntegerField(min_lenth = 1, max_length = 99)
#     Defending = models.PositiveIntegerField(min_lenth = 1, max_length = 99)
#     Physicality = models.PositiveIntegerField(min_lenth = 1, max_length = 99)
#     Player_Image = models.URLField(blank= True, max_length = 500, null=True)
#     Card_Rarity = models.CharField(max_length = 10 , choices = RARITY_CHOICES)

#     class Meta:
#         db_table = "card"

# class CARD_RARITY(models.Model):
#     Name = models.CharField(max_length = 10 , choices = RARITY_CHOICES)
#     image_url = models.TextField(max_length=500)

    


from django.db import models


class Nation(models.Model):
    name = models.CharField(max_length=100)
    flag = models.CharField(max_length=5) 

    def __str__(self):
        return f"{self.flag} {self.name}"


class League(models.Model):
    name = models.CharField(max_length=100)
    flag = models.CharField(max_length=5)

    def __str__(self):
        return f"{self.flag} {self.name}"


class Club(models.Model):
    name = models.CharField(max_length=100)
    flag = models.CharField(max_length=5)
    league = models.ForeignKey(League, on_delete=models.CASCADE, related_name="clubs")

    def __str__(self):
        return f"{self.flag} {self.name} ({self.league.name})"


class Position(models.Model):
    code = models.CharField(max_length=5, unique=True)
    name = models.CharField(max_length=50)

    def __str__(self):
        return f"{self.code} - {self.name}"


class CardRarity(models.Model):
    name = models.CharField(max_length=100, unique=True)
    background_image = models.ImageField(upload_to="card_backgrounds/")

    def __str__(self):
        return self.name


class PlayerCard(models.Model):
    name = models.CharField(max_length=100)
    rating = models.PositiveIntegerField()
    nation = models.ForeignKey(Nation, on_delete=models.SET_NULL, null=True)
    league = models.ForeignKey(League, on_delete=models.SET_NULL, null=True, blank=True)
    club = models.ForeignKey(Club, on_delete=models.SET_NULL, null=True, blank=True)
    position = models.ForeignKey(Position, on_delete=models.SET_NULL, null=True)
    rarity = models.ForeignKey(CardRarity, on_delete=models.SET_NULL, null=True)
    player_image = models.ImageField(upload_to="player_images/")

    # Player states
    pace = models.PositiveIntegerField()
    shooting = models.PositiveIntegerField()
    passing = models.PositiveIntegerField()
    dribbling = models.PositiveIntegerField()
    defending = models.PositiveIntegerField()
    physicality = models.PositiveIntegerField()

    def __str__(self):
        return f"{self.name} ({self.rating})"
